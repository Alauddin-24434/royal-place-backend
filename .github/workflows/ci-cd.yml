name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Cache pnpm dependencies
      - name: Cache pnpm
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # 3. Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 4. Install pnpm globally
      - name: Install pnpm
        run: npm install -g pnpm

      # 5. Install project dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 6. TypeScript check (will print full tsc errors to the Actions log)
      - name: TypeScript check
        run: pnpm exec tsc --noEmit

      # 7. Build project
      - name: Build project
        run: pnpm run build
        timeout-minutes: 10

      # 8. Install Railway CLI
      - name: Install Railway CLI
        run: npm install -g @railway/cli

      # 9. Debug Railway auth & CLI (helps surface token/service issues)
      - name: Debug Railway CLI
        run: |
          set -euo pipefail
          echo "Railway CLI version:"
          railway --version || true
          echo "Checking Railway authentication (this will fail if RAILWAY_TOKEN is invalid):"
          # don't expose token value in logs â€” command will use the env var
          if railway whoami >/dev/null 2>&1; then
            echo "Railway authentication OK"
          else
            echo "Railway authentication failed - confirm RAILWAY_TOKEN and service id are correct" >&2
            # show user-level message (not token) to help debugging
            railway whoami || true
            exit 1
          fi
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      # 10. Deploy to Railway (non-interactive, debug logs, retry on transient failures)
      - name: Deploy to Railway
        run: |
          set -euo pipefail
          echo "Deploying to Railway service: (masked)"
          # retry 3 times on transient failures
          for attempt in 1 2 3; do
            echo "Attempt $attempt"
            RAILWAY_LOG_LEVEL=debug railway up --service "${{ secrets.RAILWAY_SERVICE_ID }}" --ci && break
            echo "Deploy attempt $attempt failed."
            if [ "$attempt" -lt 3 ]; then
              echo "Retrying in 5s..."
              sleep 5
            else
              echo "All deploy attempts failed." >&2
              exit 1
            fi
          done
        timeout-minutes: 15
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          DOCKER_CONTAINER: "true"
